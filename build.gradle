plugins {
    id 'java'
    id 'io.quarkus'
    id 'maven-publish'
    id "io.freefair.lombok" version "5.0.1"
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.10.1'
    id 'org.sonarqube' version '2.8'
    id 'idea'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation "io.quarkus:quarkus-resteasy"
    implementation "io.quarkus:quarkus-elytron-security-properties-file"
    implementation "io.quarkus:quarkus-mongodb-panache"
    implementation "io.quarkus:quarkus-smallrye-health"
    implementation "io.quarkus:quarkus-smallrye-metrics:"
    implementation "io.quarkus:quarkus-smallrye-openapi:"
    implementation 'io.quarkus:quarkus-resteasy-jsonb'
    implementation 'io.quarkus:quarkus-resteasy'

    implementation 'commons-codec:commons-codec:1.13'
    implementation 'com.squareup.okhttp3:okhttp:3.4.2'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'com.sendgrid:sendgrid-java:4.4.6'
    implementation 'joda-time:joda-time:2.10.5'
    implementation 'org.jboss.resteasy:resteasy-jackson2-provider:4.5.3.Final'
    implementation 'org.apache.commons:commons-lang3:3.10'

    testImplementation "org.mockito:mockito-core:2.+"
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'
    testImplementation 'io.rest-assured:rest-assured'

    compileOnly 'org.projectlombok:lombok:1.18.12'
}

group = 'de.wirvsvirus.testresult'
version = '1.0.0-SNAPSHOT'

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
        csv.enabled = true
    }
}

coveralls {
    jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}


sonarqube {
    properties {
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.login', System.getenv("SONAR_TOKEN")
        property 'sonar.organization', 'covid-report'
        property 'sonar.projectKey', 'COVID-Report_wirvsvirus-backend-quarkus'
        property 'sonar.jacoco.reportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    finalizedBy jacocoTestReport
}


jacocoTestReport {
    dependsOn test
}
